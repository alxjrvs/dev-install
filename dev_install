#!/bin/bash
set -e
exec > >(tee $0.log) 2>&1

username=$(whoami)

# check for Apple XCode
xcode-select -v
if [ $? -ne 0 ]; then  # need to fix this check or remove
  echo "Apple Xcode command line tools not installed!!!"
  echo "Run 'xcode-select --install'"
  echo "Once complete, restart your computer and re-run this script."
  exit 1
fi

if [[ $( basename $SHELL ) = "zsh" ]]; then
  echo "-- Your shell is already set to ZSH!"
else
  echo "--- Making /bin/zsh the default shell ---"
  read -s -p "Password: " password
  echo
  echo $password | sudo -S chsh -s /bin/zsh $username
fi

if which brew >/dev/null; then
  echo "-- Homebrew Already Installed!"
else
  echo "-- Installing Homebrew ..."
  ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/install/master/install)"
fi


echo "--- Installing Apps ---"
touch Brewfile
curl https://raw.githubusercontent.com/alxjrvs/dev-install/master/Brewfile >> Brewfile
brew tap Homebrew/bundle
brew bundle || echo "Apps installed! Note any errors." 
rm Brewfile

echo "--- Install Oh My ZSH ---"
curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh

environment=$(curl https://raw.githubusercontent.com/alxjrvs/dev-install/master/environment)
echo "--- Update ~/.zshrc and ~/.bash_profile ---"
touch ~/.bash_profile
echo $environment >> ~/.zshrc
echo $environment >> ~/.bash_profile
source ~/.bash_profile

echo "--- Install Rubies ---"
RubyVersions=( '2.2.3' );
for version in "${RubyVersions[@]}"; do
  if [[ $string == *$version* ]]; then
    echo "Already Installed $version"
  else
    ruby-install ruby $version
  fi
done

default_ruby=${RubyVersions[0]}
echo "--- Set the Default Ruby Version to $default_ruby ---"
chruby $default_ruby
echo $default_ruby > ~/.ruby-version

echo "--- Install Gems ---"
touch ~/.gemrc
curl https://raw.githubusercontent.com/alxjrvs/dev-install/master/.gemrc >> ~/.gemrc
gem install bundler
bundle install

echo "--- Developer Tools Install Script Complete! ---"
echo "Restart your terminal to load the new changes."
echo "Then, run './dev_check' to verify the installation."
